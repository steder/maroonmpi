Attempts to show that core.test, core.wait, core.irecv, core.isend 
can be used with the more powerful Request Object based request.wait, request.test, request.send, request.recv.

>>> import sys, mpi
>>> from mpi import core
>>> rank,size = mpi.init( len(sys.argv), sys.argv )
>>> reqid, buff = mpi.irecv( 10, mpi.MPI_INT, 0,0, mpi.MPI_COMM_WORLD )
>>> reqid
[ valid recv request#: -1409286144, count: 10, datatype: 1275069445, source: 0, tag: 0, comm: 1140850688 ]
>>> status(reqid)
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
NameError: name 'status' is not defined
>>> reqid.status
<bound method Request.status of [ valid recv request#: -1409286144, count: 10, datatype: 1275069445, source: 0, tag: 0, comm: 1140850688 ]>
>>> reqid.status()
(False, '[ valid recv request#: -1409286144, count: 10, datatype: 1275069445, source: 0, tag: 0, comm: 1140850688 ]')
>>> help(reqid.status())

>>> help(reqid.status)

>>> help(core.test)

>>> core.test( reqid )
0
>>> mpi.send( [1,2,3,4,5,6,7,8,9,10], 10, mpi.MPI_INT, 0, 0, mpi.MPI_COMM_WORLD )
0
>>> core.test( reqid )
1
>>> buff
array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 'i')
